# ./.github/workflows/docker.yaml

# A Github action that builds and pushes docker image to Github Container Register
# Read/Write permission needs to be set in Repository Workflow Permissions
---
name: Build and Publish Docker Images (Package) to GHCR

on:
  release:
    types: [published]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repo for the workflow
      # A Github Action for checking out a repo for the workflow
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive # Protobuf files is a submodule
          # token: ${{ secrets.PAT }}

      # 2. Grab the metadata from the repo to add tags and labels to the Docker Image
      # A GitHub Action to extract metadata (tags, labels) from Git reference for
      # Docker Image labels and tags 
      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/ianteda/authentication
          tags: |
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=semver,pattern={{major}},prefix=v

      # 3. Setup QEMU static binaries for the build process later
      # A GitHub Action to install QEMU static binaries for Buildx
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 4. Set up the Docker Build architecture
      # A GitHub Action to set up Docker Buildx to allow multi architecture builds
      # https://github.com/docker/buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log into Docker to push build. NOT using docker, but left for reference
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Login to GitHub to allow pushing of the build images
      # A GitHub Action to login against a Github container registry.
      # https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # This is the user that triggered the Workflow. In this case, it will
          # either be the user whom created the Release or manually triggered
          # the workflow_dispatch.
          username: ${{ github.actor }}
          # `secrets.GITHUB_TOKEN` is a secret that's automatically generated by
          # GitHub Actions at the start of a workflow run to identify the job.
          # This is used to authenticate against GitHub Container Registry.
          # See https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret
          # for more detailed information.
          password: ${{ secrets.GITHUB_TOKEN }}

      # 6. Build and push images to GitHub Packages.
      # A GitHub Action to build and push Docker images with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64, linux/arm64
          provenance: false
          file: ./Dockerfile
          # context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # tags: ghcr.io/ianteda/authentication:latest
          outputs: "\
            type=image,\
            name=target,\
            annotation-index.org.opencontainers.image.title=Authentication,\
            annotation-index.org.opencontainers.image.description=A service for handling application authentication and sessions.,\
            annotation-index.org.opencontainers.image.source=https://github.com/ianteda/authentication_microservice,\
            annotation-index.org.opencontainers.image.licenses=GPL-3.0"