###############################################################################
## CARGO MAKEFILE
## Rust task runner and build tool.
##
## https://github.com/sagiegurari/cargo-make
## $ cargo install --force cargo-make
## ############################################################################

## https://github.com/watchexec/cargo-watch
## $ cargo make watch
[tasks.watch]
install_crate = "cargo-watch"
command = "cargo"
args = [
    "watch",
    "--clear",
    "--quiet",
    "--exec", "run",
    "--watch", "src"
]

## https://github.com/xd009642/tarpaulin
## $ cargo make tarpaulin
[tasks.coverage]
install_crate = "cargo-tarpaulin"
command = "cargo"
args = ["tarpaulin", "--ignore-tests"]

## Drop Database
## $ sqlx database create
[tasks.db_drop]
install_crate = "sqlx-cli"
command = "sqlx"
args = ["database", "drop"]

## Create Database
## $ sqlx database create
[tasks.db_create]
install_crate = "sqlx-cli"
command = "sqlx"
args = ["database", "create"]

## Migrate database
## $ sqlx migrate run
[tasks.db_migrate]
install_crate = "sqlx-cli"
command = "sqlx"
args = ["migrate", "run"]

[tasks.db_prepare]
install_crate = "sqlx-cli"
command = "cargo"
args = ["sqlx", "prepare", "--check"]

[tasks.db]
dependencies = ["db_drop", "db_create", "db_migrate", "db_prepare"]

## Migrate database
## $ sqlx migrate run
[tasks.test]
install_crate = "cargo"
command = "test"
args = ["--features", "mock"]

[tasks.sqlx_offline]
install_crate = "sqlx-cli"
command = "cargo"
args = ["sqlx", "prepare", "--", "--bin", "authentication_microservice"]

[tasks.docker_build]
command = "docker"
args = [
    "build",
    "--tag", "authentication:latest",
    "--file", "Dockerfile", ".", 
]

[tasks.docker_image]
dependencies = ["sqlx_offline", "docker_build"]